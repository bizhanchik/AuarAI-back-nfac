version: '3.8'

services:
  web:
    build:
      context: .
      dockerfile: Dockerfile
    command: sh -c "alembic upgrade head && uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload"
    ports:
      - "8000:8000"
    volumes:
      - .:/app:delegated
    env_file:
      - .env
    depends_on:
      - db
      - redis
    networks:
      - app-network

  db:
    image: postgres:15
    restart: always
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    env_file:
      - .env
    networks:
      - app-network

  redis:
    image: redis:7-alpine
    command: ["redis-server", "--appendonly", "yes", "--replica-read-only", "no"]
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - app-network

  celery_worker:
    build:
      context: .
      dockerfile: Dockerfile
    restart: always
    command: >
      celery -A app.tasks worker
      --loglevel=info
      --without-gossip
      --without-mingle
      --heartbeat-interval=10
      --concurrency=4
      --pool=prefork
    env_file:
      - .env
    depends_on:
      redis:
        condition: service_healthy
      db:
        condition: service_started
    volumes:
      - .:/app:delegated
    networks:
      - app-network
    deploy:
      replicas: 2

  celery_beat:
    build:
      context: .
      dockerfile: Dockerfile
    command: celery -A app.tasks beat --loglevel=info
    volumes:
      - .:/app:delegated
    env_file:
      - .env
    depends_on:
      - redis
      - celery_worker
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  postgres_data:
